HOST: https://b4.autodesk.com

--- BIM 360 Glue ---
---
The Web Services API is a data access API that will allow third party developers to access to the various
data objects within the BIM 360 Glue Platform.
These data objects would include types such as Users, Projects, Models, etc. With this API, a developer
could easily integrate external applications such as project management systems, accounting systems or
custom developed solutions.
---

--
Security Service
This is responsible for the security management (authentication, creation, etc.) of BIM 360 Glue user accounts.
--


Activation of the invitation.
POST /api/security/v1/activate.json
> Content-Type: application/json
< 200
{
    "user_id": "057749b3-a472-4f63-a00e-9d4c17331cd3"
}


`Service Provider Access ONLY`

This call disables a user from accessing a user account.
###Parameters
- **format** : The format for the service call response
- **company_id**: The company identifier for the BIM 360 Glue Platform
- **api_key**: The API key assigned by Autodesk for the API developer
- **auth_token**: The authentication token assigned to the user during the login process. `NOT REQUIRED FOR A SERVICE PROVIDER API KEY`
- **timestamp**: The API key assigned by Autodesk for the API developer
- **sig**: The MD5 generated hash of which insures the identity of the API developer. To build the signature, concatenate the following information (api_key + api_secret + timestamp) and then generate the MD5 hash for the string.
- **proxy_user_id**: This is the user identifier string of the user account you wish to update. Either proxy_user_id or proxy_login_name must be valid to perform this operation.
- **proxy_login_name**: This is the user login name for the user you wish to update. Either proxy_user_id or proxy_login_name must be valid to perform this operation.
- **pretty**: Return the XML/JSON in a human readable format
- **no_http_status**: If 1, then an HTTP Status code of 200 will be returned for ALL responses and any errors will be returned in the text/plain body on a single line in the format:
ERROR;error_number;error_message.
POST /api/security/v1/disable.json
> Content-Type: application/json
< 200
{
    "update_time": "2012-05-01 23:56:01",
    "user_id": "057749b3-a472-4f63-a00e-9d4c17331cd3"
}


`Service Provider Access ONLY`

This call enables a user and allows them to access their user account.
POST /api/security/v1/enable.json
> Content-Type: application/json
< 200
{
    "update_time": "2012-05-01 23:56:01",
    "user_id": "057749b3-a472-4f63-a00e-9d4c17331cd3"
}


`Service Provider Access ONLY`

This call allows a Service Provider enabled key to invite a new user account to a company roster in the BIM 360 Glue Platform.
POST /api/security/v1/invite.json
< 200
{
    "user_id": "The user_id of the new account",
    "invitation_id": "The invitation_id of the new account",
    "invitation_url": "The URL user would need to activate his account",
    "company": "The name of the company",
    "created_date": "The date user was linked in BIM 360",
    "user_type": "User Permissions: ADMIN=Customer controlled Glue Administrator | FULL=Full rights to read/write/delete project data | LIMITED=Cannot delete project data | REVIEWER=View specifically shared project data | PROJECTADMIN=Project Administrator for Glue Projects"
}


`Service Provider Access ONLY`


This call allows a Service Provider enabled key to resend invitation email to previously created but not activated user account in the BIM 360 Glue Platform.
POST /api/security/v1/invite_repeat.json
> Content-Type: application/json
< 200
{
    "user_id": "The user_id of the new account",
    "invitation_id": "The invitation_id of the new account",
    "invitation_url": "The URL user would need to activate his account",
    "company": "The name of the company",
    "created_date": "The date user was linked in BIM 360"
}


This call authenticates a user to the BIM 360 Glue Platform and returns an authentication token for use on subsequent service calls. This call is for normal auth_token sessions and not Service Provider API keys sessions.
POST /api/security/v1/login.json
> Content-Type: application/json
< 200
{
  "auth_token": "9a9c689e94bd42a786c4f68102aa07d9",
  "user_id": "057749b3-a472-4f63-a00e-9d4c17331cd3"
}


This call de-authenticates a user with a valid auth_token from the BIM 360 Glue Platform. Once this is performed, the company_id / api_key / auth_token combination will no longer authenticate the user. This call is for normal auth_token sessions and not Service Provider API keys sessions.
POST /api/security/v1/logout.json
> Content-Type: application/json
< 200
{
  "auth_token_age": "number of minutes since login"
}


`Service Provider Access ONLY`

This call allows a Service Provider application to perform an authentication operation for a specific user in the BIM 360 Glue system. This capability would allow for a custom developed application to authenticate a user from a trusted system without the need for BIM 360 Glue passwords being stored on the remote system. Once authenticated, the authentication token can be used on subsequent service calls by standard user accounts.
POST /api/security/v1/proxylogin.json
> Content-Type: application/json
< 200
{
  "auth_token": "9a9c689e94bd42a786c4f68102aa07d9",
  "user_id": "057749b3-a472-4f63-a00e-9d4c17331cd3"
}


`Service Provider Access ONLY`

This call allows a Service Provider to de-authenticate a user's auth_token from the BIM 360 Glue Platform. Once this is performed, the company_id / api_key / auth_token combination will no longer authenticate the user.
POST /api/security/v1/proxylogout.json
> Content-Type: application/json
< 200
{
  "auth_token_age": "number of minutes since login"
}


--
Project Service
This is used to manage the Projects within the BIM 360 Glue Platform.
--

--
Model Service
This is used to manage the 3D models within the BIM 360 Glue Platform.
--


This call add a request for BIM 360 Glue to create a single aggregated model file of a BIM 360 Glue merged model.
POST /api/model/v1/aggregate.json
> Content-Type: application/json
< 200
{
    "update_time": "The aggregation request time in GMT/UTC",
    "model_id": "The model ID for the requested aggregated model",
    "status": "The status of the aggregation request"
}


This call will get action id of all animations for the specified model file.
GET /api/model/v1/animation.json
> Content-Type: application/json
< 200
{
    "project_id": "The Project identifier for this model",
    "model_id": "The master identifier for the model",
    "model_version_id": "The version identifier for this specific version of the model",
    "model_name": "The name for the model",
    "model_animations": [
        {
            "animation_id": "The identifier for the animation",
            "action_id": "The action identifier used with the Display Component to play back the animation",
            "created_by": "The login_name of the creator of the animation",
            "creation_date": "The date the animation was created"
        },
        {
            "animation_id": "The identifier for the animation",
            "action_id": "The action identifier used with the Display Component to play back the animation",
            "created_by": "The login_name of the creator of the animation",
            "creation_date": "The date the animation was created"
        }
    ]
}

This call will download for the attachment of a Model file from the BIM 360 Glue server. If you perform a HEAD operation, you will only receive the header with the Content-Length set to the length of the attachment file.
GET api/model/v1/attachment
< 200


HEAD api/model/v1/attachment
< 200
< Content-Length: 0


This call gets the attachments of one particular model. If you specifcy the model version, you will only recieve the attachments of particular model version.If you don't specify the model version, you will recieve the attachments of all the versions of the models.
GET /api/model/v1/attachments.json
> Content-Type: application/json
< 200
{
    "model_id": "The ID of the model",
    "model_attachments": [
        {
            "model_id": "The model ID for the attachment",
            "model_version_id": "The version ID of the model",
            "attachment_id": "The ID for the attachment",
            "attachment_name": "The name for the attachment",
            "attachment_type": "The type of the attachment, file or url",
            "attachment_version_id": "The version id of the attachment",
            "attachment_version": "The version of the attachment",
            "created_by": "The login_name of the creator of the attachment",
            "created_date": "The attachment was added",
            "modified_by": "The login_name of the last user to modify this version of the attachment",
            "modified_date": "The attachment was modified",
            "model_object_indices": "The path of the object for the attachment",
            "model_object_name": "The name of the model object"
        },
        {
            "model_id": "The model ID for the attachment",
            "model_version_id": "The version ID of the model",
            "attachment_id": "The ID for the attachment",
            "attachment_name": "The name for the attachment",
            "attachment_type": "The type of the attachment, file or url",
            "attachment_version_id": "The version id of the attachment",
            "attachment_version": "The version of the attachment",
            "created_by": "The login_name of the creator of the attachment",
            "created_date": "The attachment was added",
            "modified_by": "The login_name of the last user to modify this version of the attachment",
            "modified_date": "The attachment was modified",
            "model_object_indices": "The path of the object for the attachment",
            "model_object_name": "The name of the model object"
        }
    ]
}


This call will add a comment to a result from a clash test. Curently, there can only be a single comment for a result so this call will REPLACE any other comments currently stored for a result.
POST /api/model/v1/clash_result_comment.json
> Content-Type: application/json
< 200
{
    "model_id": "The model for the comment",
    "clash_test_result_id": "The clash test result identifier",
    "update_time": "The comment time in GMT/UTC for the new comment",
    "comment_id": "The ID for the newly created comment"
}


This call returns detailed clash result information for a specific clash test run.
GET /api/model/v1/clash_test_results.json
> Content-Type: application/json
< 200
{
    "clash_test_version_id": "The identifier for the specific version of a clash test",
    "model_id": "The ID for the model",
    "model_name": "The name for the model",
    "clash_results": [
        {
            "clash_test_result_id": "The identifier for the clash result",
            "clash_test_version_id": "The identifier for the specific version of a clash test",
            "item1": [
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                },
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                }
            ],
            "item2": [
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                },
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                }
            ],
            "magnitude": 0,
            "comments": [
                {
                    "clash_test_comment_id": "The identifier for the clash comment",
                    "clash_test_result_id": "The identifier for the clash result",
                    "created_by": "login_name of the creator of the comment",
                    "created_date": "Date comment was created",
                    "comment": "The comment for the clash result"
                },
                {
                    "clash_test_comment_id": "The identifier for the clash comment",
                    "clash_test_result_id": "The identifier for the clash result",
                    "created_by": "login_name of the creator of the comment",
                    "created_date": "Date comment was created",
                    "comment": "The comment for the clash result"
                }
            ]
        },
        {
            "clash_test_result_id": "The identifier for the clash result",
            "clash_test_version_id": "The identifier for the specific version of a clash test",
            "item1": [
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                },
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                }
            ],
            "item2": [
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                },
                {
                    "file_id": "The File ID",
                    "path_id": "The path identifier"
                }
            ],
            "magnitude": 0,
            "comments": [
                {
                    "clash_test_comment_id": "The identifier for the clash comment",
                    "clash_test_result_id": "The identifier for the clash result",
                    "created_by": "login_name of the creator of the comment",
                    "created_date": "Date comment was created",
                    "comment": "The comment for the clash result"
                },
                {
                    "clash_test_comment_id": "The identifier for the clash comment",
                    "clash_test_result_id": "The identifier for the clash result",
                    "created_by": "login_name of the creator of the comment",
                    "created_date": "Date comment was created",
                    "comment": "The comment for the clash result"
                }
            ]
        }
    ]
}


This call deletes a Model and all of its versions from the BIM 360 Glue Platform.
POST /api/model/v1/delete.json
> Content-Type: application/json
< 200
{
    "update_time": "The deletion time in GMT/UTC",
    "model_id": "The model ID of the deleted model"
}


This call returns a list of dependencies for a particular model.
GET api/model/v1/dependencies.json
> Content-Type: application/json
< 200
{
    "dependency_list": [
        {
            "source_model_id": "The Glue Model ID that has this dependency",
            "dependency_id": "The unique identifier for this dependency",
            "dependency_name": "The name of the dependency in the model",
            "glue_model_id": "The Glue Model ID to fulfill the dependency - NULL means the dependency has not been fulfilled"
        },
        {
            "source_model_id": "The Glue Model ID that has this dependency",
            "dependency_id": "The unique identifier for this dependency",
            "dependency_name": "The name of the dependency in the model",
            "glue_model_id": "The Glue Model ID to fulfill the dependency - NULL means the dependency has not been fulfilled"
        }
    ],
    "root_model_id": "The Root Glue Model ID for this dependency graph",
    "total_dependency_count": 2,
    "missing_dependency_count": 2
}


This call will download the Model file from the BIM 360 Glue server. If you perform a HEAD operation, you will only receive the header with the Content-Length set to the length of the model file. Also, byte range header specifications are also supported on this call specifically in the form: bytes=XXX-YYY
GET /api/model/v1/download
< 200

HEAD /api/model/v1/download
< 200
< Content-Length: 0

This call returns information of a given Model specified by the model_id.
GET /api/model/v1/info.json
> Content-Type: application/json
< 200
{
	"version_history": [
		{
			"model_version": 2,
			"model_id": "The master identifier for this model ID",
			"action_id": "For Views: The action identifier used with the Display Component to view this Model",
			"model_version_id": "The ID for this particular version of the model",
			"created_by": "login_name of the creator of the model",
			"created_date": "Date model was created",
			"modified_by": "The login_name of the last user to modify this version of the model",
			"published": 0
		},
		{
			"model_version": 2,
			"model_id": "The master identifier for this model ID",
			"action_id": "For Views: The action identifier used with the Display Component to view this Model",
			"model_version_id": "The ID for this particular version of the model",
			"created_by": "login_name of the creator of the model",
			"created_date": "Date model was created",
			"modified_by": "The login_name of the last user to modify this version of the model",
			"published": 0
		}
	],
	"action_id": "The action identifier used with the Display Component to view this Model",
	"company_id": "The company identifier for this model",
	"project_id": "The Project identifier for this model",
	"model_id": "The master identifier for the model",
	"model_version": 1,
	"model_version_id": "The version identifier for this specific version of the model",
	"model_name": "The name for the model",
	"created_by": "The login_name of the creator of the model",
	"created_date": "The date the model was created",
	"modified_by": "The login_name of the last user to modify the model",
	"modified_date": "Date of last modification",
	"parent_folder_id": "The parent folder for the model",
	"file_parsed_status": 1,
	"is_merged_model": 1,
	"merged_model_available": 0,
	"merged_model_aggregation_status": "If this is a merged model and it is NOT available (merged_model_available=0) then this field indicates the status the model aggregation. The field values are: NOT_QUEUED - the model has NOT been queued for aggregation, WAITING - the model is in queue for aggregation, but has not started processing, PROCESSING=XX - the model is being aggregated, and is XX percent complete, FAILED - the model aggregation failed, READY - the model aggregation is complete and ready for consumption",
	"merged_submodels": [
		{
			"type": "Type of node: FOLDER or MODEL",
			"name": "The name of the object",
			"object_id": "The BIM 360 Glue ID for the object",
			"action_id": "For Models: The action identifier used with the Display Component to view this Model",
			"version_id": "The version ID for the object (applies to Models)",
			"version": 1,
			"created_by": "The login_name of the person creating the object",
			"created_date": "The date the object was created",
			"parent_folder_id": "The parent folder ID",
			"is_merged_model": 0,
			"merged_model_available": 0,
			"merged_model_aggregation_status": "If this is a merged model and it is NOT available (merged_model_available=0) then this field indicates the status the model aggregation. The field values are: NOT_QUEUED - the model has NOT been queued for aggregation, WAITING - the model is in queue for aggregation, but has not started processing, PROCESSING=XX - the model is being aggregated, and is XX percent complete, FAILED - the model aggregation failed, READY - the model aggregation is complete and ready for consumption If a model is NOT available (merged_model_available=0) then this field indicates the status the model aggregation. The field values are: NOT_QUEUED - the model has NOT been queued for aggregation, WAITING - the model is in queue for aggregation, but has not started processing, PROCESSING=XX - the model is being aggregated, and is XX percent complete, FAILED - the model aggregation failed, READY - the model aggregation is complete and ready for consumption",
			"folder_contents": [
				{
					"type": "Type of node: FOLDER or MODEL",
					"name": "The name of the object",
					"object_id": "The BIM 360 Glue ID for the object",
					"action_id": "",
					"version_id": "The version identifier for the object/model",
					"version": 0,
					"created_by": null,
					"created_date": "The date the object was created",
					"parent_folder_id": "The parent folder ID",
					"is_merged_model": 0,
					"merged_model_available": 0,
					"merged_model_aggregation_status": "If this is a merged model and it is NOT available (merged_model_available=0) then this field indicates the status the model aggregation. The field values are: NOT_QUEUED - the model has NOT been queued for aggregation, WAITING - the model is in queue for aggregation, but has not started processing, PROCESSING=XX - the model is being aggregated, and is XX percent complete, FAILED - the model aggregation failed, READY - the model aggregation is complete and ready for consumption",
					"folder_contents": null,
					"merged_submodels": null
				}
			],
			"merged_submodels": null
		}
	],
	"clash_reports": [
		{
			"clash_report_id": "The identifier for the clash report",
			"action_id": "The action identifier used with the Display Component to view this particular Clash Report",
			"name": "The name for the clash report",
			"project_id": "The Project Identifier for this clash report",
			"model_id": "The master Model Identifier",
			"model_version_id": "The version identifier for Model that has this clash report is referencing",
			"model_version": 1,
			"model_name": "The name of the Model",
			"created_by": "login_name of the creator of the report",
			"created_date": "Date report was created",
			"modified_by": "The login_name of the last user to modify the report",
			"modified_date": "Date of last modification",
			"comments": "Comments for the clash report"
		},
		{
			"clash_report_id": "The identifier for the clash report",
			"action_id": "The action identifier used with the Display Component to view this particular Clash Report",
			"name": "The name for the clash report",
			"project_id": "The Project Identifier for this clash report",
			"model_id": "The master Model Identifier",
			"model_version_id": "The version identifier for Model that has this clash report is referencing",
			"model_version": 1,
			"model_name": "The name of the Model",
			"created_by": "login_name of the creator of the report",
			"created_date": "Date report was created",
			"modified_by": "The login_name of the last user to modify the report",
			"modified_date": "Date of last modification",
			"comments": "Comments for the clash report"
		}
	],
	"view_tree": [
		{
			"view_info": {
				"camera_pos_x": "Camera Position X Coordinate",
				"camera_pos_y": "Camera Position Y Coordinate",
				"camera_pos_z": "Camera Position Z Coordinate",
				"target_pos_x": "Target Position X Coordinate",
				"target_pos_y": "Target Position Y Coordinate",
				"target_pos_z": "Target Position Z Coordinate",
				"up_vector_x": "Up Vector X Coordinate",
				"up_vector_y": "Up Vector Y Coordinate",
				"up_vector_z": "Up Vector Z Coordinate",
				"fov_width": "Field of View Width",
				"fov_height": "Field of View Height",
				"camera_view_mode": "Camera view mode: perspective, orthographic",
				"navigation_mode": "Navigation Mode: relativeorbit, hopcamerapan, hopcamerawalk, look"
			},
			"markups": [
				{
					"markup_id": "The identifier for Markup",
					"action_id": "The action identifier used with the Display Component to view this Markup",
					"view_id": "The view identifier that this Markup is associated with",
					"name": "The name for the Markup",
					"project_id": "The Project Identifier for this Markup",
					"model_id": "The master Model Identifier",
					"model_version_id": "The version identifier for Model that has this Markup is referencing",
					"model_version": 1,
					"created_by": "login_name of the creator of the markup",
					"created_date": "Date markup was created",
					"modified_by": "The login_name of the last user to modify the markup",
					"modified_date": "Date of last modification",
					"group_id": "The group identifier for this Markup"
				}
			],
			"folder_contents": [
				{
					"view_info": null,
					"markups": null,
					"folder_contents": null,
					"type": "Type of node: VIEW, FOLDER",
					"name": "The name of the object",
					"object_id": "The BIM 360 Glue ID for the object",
					"action_id": "",
					"project_id": null,
					"model_id": null,
					"model_version_id": "The version identifier for the object",
					"model_version": 0,
					"created_by": null,
					"created_date": "The date the object was created",
					"modified_by": null,
					"modified_date": null,
					"global": null,
					"parent_folder_id": "The parent folder ID",
					"selection_set": null,
					"hidden_set": null,
					"transparent_set": null,
					"color_object_set": null
				}
			],
			"type": "Type of node: VIEW, FOLDER",
			"name": "The name for the View/Folder",
			"object_id": "The identifier for the VIEW, FOLDER",
			"action_id": "For Views: The action identifier used with the Display Component to view this View",
			"project_id": "The Project Identifier for this view",
			"model_id": "The master Model Identifier",
			"model_version_id": "The version identifier for Model that has this view is referencing",
			"model_version": 1,
			"created_by": "login_name of the creator of the object",
			"created_date": "Date object was created",
			"modified_by": "The login_name of the last user to modify the object",
			"modified_date": "Date of last modification",
			"global": "1 or 0: A view can either be global (visible to everyone in the project) or private (visible to only yourself)",
			"parent_folder_id": "The parent folder ID",
			"selection_set": {
				"selected_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				]
			},
			"hidden_set": {
				"hidden_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				]
			},
			"transparent_set": {
				"transparent_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				],
				"isolated_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				]
			},
			"color_object_set": {
				"color_objects": [
					{
						"model_path_id": {
							"model_id": "The model ID",
							"path_id": "The path identifier"
						},
						"red": 0,
						"green": 0,
						"blue": 0
					},
					{
						"model_path_id": {
							"model_id": "The model ID",
							"path_id": "The path identifier"
						},
						"red": 0,
						"green": 0,
						"blue": 0
					}
				]
			}
		},
		{
			"view_info": {
				"camera_pos_x": "Camera Position X Coordinate",
				"camera_pos_y": "Camera Position Y Coordinate",
				"camera_pos_z": "Camera Position Z Coordinate",
				"target_pos_x": "Target Position X Coordinate",
				"target_pos_y": "Target Position Y Coordinate",
				"target_pos_z": "Target Position Z Coordinate",
				"up_vector_x": "Up Vector X Coordinate",
				"up_vector_y": "Up Vector Y Coordinate",
				"up_vector_z": "Up Vector Z Coordinate",
				"fov_width": "Field of View Width",
				"fov_height": "Field of View Height",
				"camera_view_mode": "Camera view mode: perspective, orthographic",
				"navigation_mode": "Navigation Mode: relativeorbit, hopcamerapan, hopcamerawalk, look"
			},
			"markups": [
				{
					"markup_id": "The identifier for Markup",
					"action_id": "The action identifier used with the Display Component to view this Markup",
					"view_id": "The view identifier that this Markup is associated with",
					"name": "The name for the Markup",
					"project_id": "The Project Identifier for this Markup",
					"model_id": "The master Model Identifier",
					"model_version_id": "The version identifier for Model that has this Markup is referencing",
					"model_version": 1,
					"created_by": "login_name of the creator of the markup",
					"created_date": "Date markup was created",
					"modified_by": "The login_name of the last user to modify the markup",
					"modified_date": "Date of last modification",
					"group_id": "The group identifier for this Markup"
				}
			],
			"folder_contents": [
				{
					"view_info": null,
					"markups": null,
					"folder_contents": null,
					"type": "Type of node: VIEW, FOLDER",
					"name": "The name of the object",
					"object_id": "The BIM 360 Glue ID for the object",
					"action_id": "",
					"project_id": null,
					"model_id": null,
					"model_version_id": "The version identifier for the object",
					"model_version": 0,
					"created_by": null,
					"created_date": "The date the object was created",
					"modified_by": null,
					"modified_date": null,
					"global": null,
					"parent_folder_id": "The parent folder ID",
					"selection_set": null,
					"hidden_set": null,
					"transparent_set": null,
					"color_object_set": null
				}
			],
			"type": "Type of node: VIEW, FOLDER",
			"name": "The name for the View/Folder",
			"object_id": "The identifier for the VIEW, FOLDER",
			"action_id": "For Views: The action identifier used with the Display Component to view this View",
			"project_id": "The Project Identifier for this view",
			"model_id": "The master Model Identifier",
			"model_version_id": "The version identifier for Model that has this view is referencing",
			"model_version": 1,
			"created_by": "login_name of the creator of the object",
			"created_date": "Date object was created",
			"modified_by": "The login_name of the last user to modify the object",
			"modified_date": "Date of last modification",
			"global": "1 or 0: A view can either be global (visible to everyone in the project) or private (visible to only yourself)",
			"parent_folder_id": "The parent folder ID",
			"selection_set": {
				"selected_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				]
			},
			"hidden_set": {
				"hidden_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				]
			},
			"transparent_set": {
				"transparent_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				],
				"isolated_objects": [
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					},
					{
						"model_id": "The model ID",
						"path_id": "The path identifier"
					}
				]
			},
			"color_object_set": {
				"color_objects": [
					{
						"model_path_id": {
							"model_id": "The model ID",
							"path_id": "The path identifier"
						},
						"red": 0,
						"green": 0,
						"blue": 0
					},
					{
						"model_path_id": {
							"model_id": "The model ID",
							"path_id": "The path identifier"
						},
						"red": 0,
						"green": 0,
						"blue": 0
					}
				]
			}
		}
	]
}


--
User Service
This is used for the use and maintenance of BIM 360 Glue user information.
--


This call returns the list of users for a specific company.
GET /api/user/v1/company_roster.json
> Content-Type: application/json
< 200
{
    "user_roster": [
        {
            "user_id": "The user_id of the account",
            "login_name": "The user login name for the account",
            "first_name": "The users first name",
            "last_name": "The users last name",
            "company": "The name of the company",
            "created_date": "The date user was created in BIM 360",
            "num_sessions": 1,
            "disabled": 0,
            "deleted": 0,
            "password_change_required": 0,
            "user_type": "User Permissions: ADMIN=Customer controlled Glue Administrator | FULL=Full rights to read/write/delete project data | LIMITED=Cannot delete project data | REVIEWER=View specifically shared project data | PROJECTADMIN=Project Administrator for Glue Projects"
        },
        {
            "user_id": "The user_id of the account",
            "login_name": "The user login name for the account",
            "first_name": "The users first name",
            "last_name": "The users last name",
            "company": "The name of the company",
            "created_date": "The date user was created in BIM 360",
            "num_sessions": 1,
            "disabled": 0,
            "deleted": 0,
            "password_change_required": 0,
            "user_type": "User Permissions: ADMIN=Customer controlled Glue Administrator | FULL=Full rights to read/write/delete project data | LIMITED=Cannot delete project data | REVIEWER=View specifically shared project data | PROJECTADMIN=Project Administrator for Glue Projects"
        }
    ],
    "page": 1,
    "page_size": 2,
    "total_result_size": 2,
    "more_pages": 0
}


`Service Provider Access ONLY`

This call returns the list of users for a specific company.
GET /api/user/v1/company_roster_ex.json
> Content-Type: application/json
< 200
{
    "user_roster": [
        {
            "user_id": "The user_id of the account",
            "login_name": "The user login name for the account",
            "first_name": "The users first name",
            "last_name": "The users last name",
            "company": "The name of the company",
            "created_date": "The date user was created in BIM 360",
            "num_sessions": 1,
            "disabled": 0,
            "deleted": 0,
            "password_change_required": 0,
            "user_type": "User Permissions: ADMIN=Customer controlled Glue Administrator | FULL=Full rights to read/write/delete project data | LIMITED=Cannot delete project data | REVIEWER=View specifically shared project data | PROJECTADMIN=Project Administrator for Glue Projects",
            "autodesk_id": "The Autodesk ID unique identifier",
            "email": "The email address for a user"
        },
        {
            "user_id": "The user_id of the account",
            "login_name": "The user login name for the account",
            "first_name": "The users first name",
            "last_name": "The users last name",
            "company": "The name of the company",
            "created_date": "The date user was created in BIM 360",
            "num_sessions": 1,
            "disabled": 0,
            "deleted": 0,
            "password_change_required": 0,
            "user_type": "User Permissions: ADMIN=Customer controlled Glue Administrator | FULL=Full rights to read/write/delete project data | LIMITED=Cannot delete project data | REVIEWER=View specifically shared project data | PROJECTADMIN=Project Administrator for Glue Projects",
            "autodesk_id": "The Autodesk ID unique identifier",
            "email": "The email address for a user"
        },
    ],
    "page": 1,
    "page_size": 2,
    "total_result_size": 2,
    "more_pages": 0
}


This call will provide access for the profile image of an Autodesk ID user.
GET /api/user/v1/icon
< 200


This call returns information of a given user, specified by user_id or login_name. If neither user_id or login_name are not specified, information about the authenticated account will be returned for standard BIM 360 Glue users.
GET /api/user/v1/info.json
> Content-Type: application/json
< 200
{
    "user_id": "The user_id of the account",
    "login_name": "The user login name for the account",
    "first_name": "The users first name",
    "last_name": "The users last name",
    "company": "The name of the company",
    "created_date": "The date user was created in BIM 360",
    "num_sessions": 1,
    "disabled": 0,
    "deleted": 0,
    "password_change_required": 0,
    "user_type": "User Permissions: ADMIN=Customer controlled Glue Administrator | FULL=Full rights to read/write/delete project data | LIMITED=Cannot delete project data | REVIEWER=View specifically shared project data | PROJECTADMIN=Project Administrator for Glue Projects"
}


This call allows the user to mark a notice as being read or un-read.
POST /api/user/v1/notice_read.json
> Content-Type: application/json
< 200
{
    "status": "The status (SUCCESS or FAIL) for the update of the notice",
    "notice_id": "The notice ID"
}


This call returns notices for a given user, specified by proxy_user_id or proxy_login_name. If neither proxy_user_id or proxy_login_name are not specified, information about the authenticated account will be returned for standard BIM 360 Glue users.
GET /api/user/v1/notices.json
> Content-Type: application/json
< 200
{
    "notice_list": [
        {
            "notice_sender": {
                "user_id": "Glue user id of the user",
                "login_name": "This is the login name for the user who sent the notice, received the notice or created the activity in Glue",
                "first_name": "First name of the user",
                "last_name": "Last name of the user",
                "email": "User email address"
            },
            "notice_id": "The ID for this notice",
            "notice_date": "The creation date for the Notice in the following format: YYYY-MM-DD hh:mm:ss.fff",
            "notice_message": "The message sent with the the notice by the sending user",
            "is_read": 0,
            "project_id": "The ID for the project for this notice",
            "project_name": "The name of the project for this notice",
            "notice_actions": [
                {
                    "action_id": "The action identifier used with the Display Component to view this particular action",
                    "project_id": "The Project identifier for the Action",
                    "model_id": "The master Model identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "version_id":"The Model specific version identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "model_name": "The Model name for the Action",
                    "subject": "A description of the action",
                    "type": "A type identifier for the action (model, mergedmodel, view, markup, rfi, clashreport, attachment, animation, submittal, clashtestversion, clashtestdelete)",
                    "type_object_id": "This is the identifier for the particular object type being described by this action. For example, the ID of a saved view",
                    "type_object_name": "This is the name for the object specified by type_object_id",
                    "created_by": "The login_name of the person generating the Action",
                    "created_date": "The creation date for the Action in the following format: YYYY-MM-DD hh:mm:ss.fff"
                },
                {
                    "action_id": "The action identifier used with the Display Component to view this particular action",
                    "project_id": "The Project identifier for the Action",
                    "model_id": "The master Model identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "version_id":"The Model specific version identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "model_name": "The Model name for the Action",
                    "subject": "A description of the action",
                    "type": "A type identifier for the action (model, mergedmodel, view, markup, rfi, clashreport, attachment, animation, submittal, clashtestversion, clashtestdelete)",
                    "type_object_id": "This is the identifier for the particular object type being described by this action. For example, the ID of a saved view",
                    "type_object_name": "This is the name for the object specified by type_object_id",
                    "created_by": "The login_name of the person generating the Action",
                    "created_date": "The creation date for the Action in the following format: YYYY-MM-DD hh:mm:ss.fff"
                },
            ],
            "notice_recipients": [
                {
                    "user_id": "Glue user id of the user",
                    "login_name": "This is the login name for the user who sent the notice, received the notice or created the activity in Glue",
                    "first_name": "First name of the user",
                    "last_name": "Last name of the user",
                    "email": "User email address"
                },
                {
                    "user_id": "Glue user id of the user",
                    "login_name": "This is the login name for the user who sent the notice, received the notice or created the activity in Glue",
                    "first_name": "First name of the user",
                    "last_name": "Last name of the user",
                    "email": "User email address"
                },
            ]
        },
        {
            "notice_sender": {
                "user_id": "Glue user id of the user",
                "login_name": "This is the login name for the user who sent the notice, received the notice or created the activity in Glue",
                "first_name": "First name of the user",
                "last_name": "Last name of the user",
                "email": "User email address"
            },
            "notice_id": "The ID for this notice",
            "notice_date": "The creation date for the Notice in the following format: YYYY-MM-DD hh:mm:ss.fff",
            "notice_message": "The message sent with the the notice by the sending user",
            "is_read": 0,
            "project_id": "The ID for the project for this notice",
            "project_name": "The name of the project for this notice",
            "notice_actions": [
                {
                    "action_id": "The action identifier used with the Display Component to view this particular action",
                    "project_id": "The Project identifier for the Action",
                    "model_id": "The master Model identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "version_id": "The Model specific version identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "model_name": "The Model name for the Action",
                    "subject": "A description of the action",
                    "type": "A type identifier for the action (model, mergedmodel, view, markup, rfi, clashreport, attachment, animation, submittal, clashtestversion, clashtestdelete)",
                    "type_object_id": "This is the identifier for the particular object type being described by this action. For example, the ID of a saved view",
                    "type_object_name": "This is the name for the object specified by type_object_id",
                    "created_by": "The login_name of the person generating the Action",
                    "created_date": "The creation date for the Action in the following format: YYYY-MM-DD hh:mm:ss.fff"
                },
                {
                    "action_id": "The action identifier used with the Display Component to view this particular action",
                    "project_id": "The Project identifier for the Action",
                    "model_id": "The master Model identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "version_id": "The Model specific version identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
                    "model_name": "The Model name for the Action",
                    "subject": "A description of the action",
                    "type": "A type identifier for the action (model, mergedmodel, view, markup, rfi, clashreport, attachment, animation, submittal, clashtestversion, clashtestdelete)",
                    "type_object_id": "This is the identifier for the particular object type being described by this action. For example, the ID of a saved view",
                    "type_object_name": "This is the name for the object specified by type_object_id",
                    "created_by": "The login_name of the person generating the Action",
                    "created_date": "The creation date for the Action in the following format: YYYY-MM-DD hh:mm:ss.fff"
                }
            ],
            "notice_recipients": [
                {
                    "user_id": "Glue user id of the user",
                    "login_name": "This is the login name for the user who sent the notice, received the notice or created the activity in Glue",
                    "first_name": "First name of the user",
                    "last_name": "Last name of the user",
                    "email": "User email address"
                },
               {
                    "user_id": "Glue user id of the user",
                    "login_name": "This is the login name for the user who sent the notice, received the notice or created the activity in Glue",
                    "first_name": "First name of the user",
                    "last_name": "Last name of the user",
                    "email": "User email address"
                }
            ]
        }
    ],
    "page": 1,
    "page_size": 2,
    "total_result_size": 2,
    "more_pages": 0
}

This call allows a user (or a Service Provider) to change the attributes of a BIM 360 Glue user account on the BIM 360 Glue Platform. Only non-empty sent attributes will be updated on the server.
POST /api/user/v1/profile.json
> Content-Type: application/json
< 200
{
    "update_time": "The update time in GMT/UTC",
    "user_id": "The user_id of the updated account",
    "login_name_updated": 1,
    "login_name_updated_error": "Any error/status message associated with a login_name update",
    "email_updated": 0,
    "email_updated_error": "Any error/status message associated with a email updates"
}


--
Action Service
This is used to access / manage user actions within the BIM 360 Glue Platform.
--


This call returns specific information about a particular Action in the BIM 360 Glue system.
GET /api/action/v1/info.json
> Content-Type: application/json
< 200
{
    "info": {
        "action_id": "The action identifier used with the Display Component to view this particular action",
        "project_id": "The Project identifier for the Action",
        "model_id": "The master Model identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
        "version_id": "The Model specific version identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
        "model_name": "The Model name for the Action",
        "subject": "A description of the action",
        "type": "A type identifier for the action (model, mergedmodel, view, markup, rfi, clashreport, attachment, animation, submittal, clashtestversion, clashtestdelete)",
        "type_object_id": "This is the identifier for the particular object type being described by this action. For example, the ID of a saved view",
        "type_object_name": "This is the name for the object specified by type_object_id",
        "created_by": "The login_name of the person generating the Action",
        "created_date": "The creation date for the Action in the following format: YYYY-MM-DD hh:mm:ss.fff"
    }
}


This call allows you to search BIM 360 Glue Actions for a specific project while specifying several search qualifiers. BIM 360 Glue Actions are representations of user interactions with the BIM 360 Glue Platform. Actions can be loaded to the viewer to show the user the exact view/state/etc. of a model when the creator of the Action performed the operation
GET /api/action/v1/search.json
> Content-Type: application/json
< 200
{
    "action_list": [
        {
            "action_id": "The action identifier used with the Display Component to view this particular action",
            "project_id": "The Project identifier for the Action",
            "model_id": "The master Model identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
            "version_id": "The Model specific version identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
            "model_name": "The Model name for the Action",
            "subject": "A description of the action",
            "type": "A type identifier for the action (model, mergedmodel, view, markup, rfi, clashreport, attachment, animation, submittal, clashtestversion, clashtestdelete)",
            "type_object_id": "This is the identifier for the particular object type being described by this action. For example, the ID of a saved view",
            "type_object_name": "This is the name for the object specified by type_object_id",
            "created_by": "The login_name of the person generating the Action",
            "created_date": "The creation date for the Action in the following format: YYYY-MM-DD hh:mm:ss.fff"
        },
        {
            "action_id": "The action identifier used with the Display Component to view this particular action",
            "project_id": "The Project identifier for the Action",
            "model_id": "The master Model identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
            "version_id": "The Model specific version identifier for the Action. If this ID is all ZEROS, then the model has been deleted from the system",
            "model_name": "The Model name for the Action",
            "subject": "A description of the action",
            "type": "A type identifier for the action (model, mergedmodel, view, markup, rfi, clashreport, attachment, animation, submittal, clashtestversion, clashtestdelete)",
            "type_object_id": "This is the identifier for the particular object type being described by this action. For example, the ID of a saved view",
            "type_object_name": "This is the name for the object specified by type_object_id",
            "created_by": "The login_name of the person generating the Action",
            "created_date": "The creation date for the Action in the following format: YYYY-MM-DD hh:mm:ss.fff"
        }
    ],
    "page": 1,
    "page_size": 2,
    "total_result_size": 2,
    "more_pages": 0
}


--
System Service
This is available to get information about the BIM 360 Glue Platform and check availability.
--


This call returns information about the BIM 360 Glue Web Services API developer key.
GET /api/system/v1/apikey.json
> Content-Type: application/json
< 200
{
    "developer_id": "The Horizontal assigned developer ID",
    "creation_ts": "The date the API account was created on the system",
    "disabled": 0,
    "company_id": "The company identifier for this account",
    "company_name": "The company name for this account",
    "address": "The physical mailing address for this account",
    "description": "A description of the developer and their use of this account",
    "url": "The Website URL for the developer",
    "contact_email": "The contact email for the developer",
    "contact_phone": "The contact phone for the developer",
    "api_key": "The assigned API Key",
    "service_provider_access": 0,
    "api_lock_ip_addresses": "Is this account locked to specific IP addresses"
}


Return the current health of the BIM 360 Glue Service. You can return a simple response or a "detailed" response for this call. If there is total failure on the call (i.e. a non-200 HTTP code) then the assumption can be made that the service is in a BAD state.
GET /api/system/v1/health.json
> Content-Type: application/json
< 200
{
    "service": "The name for the service: GLUE",
    "version": "The version of the Glue Application",
    "environment": "The operating environment: DEVELOPMENT, STAGING or PRODUCTION",
    "detailed": "1/0: This indicates if the health report does the extended processing of the detailed argument",
    "status": "GOOD: Health is Good / BAD: Health Problems",
    "detailed_message": "This is a detailed message about the service status",
    "timestamp": "The current GMT/UTC server time",
    "db_status": "[ONLY RETURNED WITH detailed OPTION] Database Status: OK: Health is Good / FAIL: Health Problems",
    "db_detailed_message": "[ONLY RETURNED WITH detailed OPTION] Database Status: This is a detailed message about the database service status",
    "storage_status": "[ONLY RETURNED WITH detailed OPTION] Storage Status: OK: Health is Good / FAIL: Health Problems",
    "storage_detailed_message": "[ONLY RETURNED WITH detailed OPTION] Storage Status: This is a detailed message about the service status"
}


Return the current state of the BIM 360 Glue Platform. This can be used to test for the health of the system (i.e. ping).
GET /api/system/v1/status.json
> Content-Type: application/json
< 200
{
    "http_status": 200,
    "server_time": "The current GMT/UTC server time",
    "system_message": "System Update: (e.g. A TWO HOUR Maintenance window will occur: 2013-09-29 12:20 - 2013-09-29 14:20)",
    "glue_platform": "The Glue Platform Version: GLUE1 - HOOPS Based Glue / GLUE2 - Navisworks Based Glue"
}


--
Push Notifications Service
This is available to access / manage device info of push notifications.
--

`Service Provider Access ONLY`

This call returns information of a given device specified by the device id, device token, user id, environment_type or mobile_app_status.
GET /api/push_notifications/v1/info.json
> Content-Type: application/json
< 200
{
    "device_list": [
        {
            "device_id": "This is the device identifier string for the device you wish to push notifications.",
            "device_token": "This is the device token string for the device you wish to push notifications.",
            "glue_user_id": "The Glue user identifier for this device",
            "environment_type": "This is the device identifier type (sandbox/production) of iOS Push Notification service.",
            "mobile_app_status": "This is the app satus [login (0)/logout (1)/uninstall (2)/invalid (3)].",
            "last_registration": "The registeration (add or update) time in GMT/UTC."
        },
        {
            "device_id": "This is the device identifier string for the device you wish to push notifications.",
            "device_token": "This is the device token string for the device you wish to push notifications.",
            "glue_user_id": "The Glue user identifier for this device",
            "environment_type": "This is the device identifier type (sandbox/production) of iOS Push Notification service.",
            "mobile_app_status": "This is the app satus [login (0)/logout (1)/uninstall (2)/invalid (3)].",
            "last_registration": "The registeration (add or update) time in GMT/UTC."
        }
    ],
    "page": 1,
    "page_size": 2,
    "total_result_size": 2,
    "more_pages": 0
}


This call registers an iOS device token for a given user.
POST /api/push_notifications/v1/ios_register.json
> Content-Type: application/json
< 200
{
    "device_id": "The device token record identifier you just registered.",
    "update_time": "The registeration (add or update) time in GMT/UTC."
}


This call disables an iOS device for a given user. Then the server won't send iOS push notifications to the device.
POST /api/push_notifications/v1/ios_invalid.json
> Content-Type: application/json
< 200
{
    "device_id":"The device token record identifier you just registered.",
    "update_time":"The update time in GMT/UTC."
}


`Service Provider Access ONLY`

This call sends an iOS push notification to a device for a given user.
POST /api/push_notifications/v1/ios_send.json
> Content-Type: application/json
< 200
{
    "api_call_result": "The status (SUCCESS or FAIL) for invoking the API call."
}